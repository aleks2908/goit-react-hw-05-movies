{"version":3,"file":"static/js/500.a62168cb.chunk.js","mappings":"gRACA,EAAuD,yBCAvD,GAAgB,KAAO,wBAAwB,SAAW,6B,SCI7CA,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KA0BA,OACE,kBAAMH,SArBa,SAAAI,GACnBA,EAAMC,iBACqB,KAAvBH,EAAYI,QAchBN,EAASE,EAAYK,cAAcD,QACnCH,EAAe,KAdbK,EAAAA,GAAAA,KAAW,2BAA4B,CACrCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,QAOZ,EAG+BC,UAAWC,EAAAA,KAAzC,WACE,kBACEC,SA3Be,SAAAhB,GACnBD,EAAeC,EAAMiB,cAAcC,MACpC,EA0BKC,KAAK,OACLD,MAAOpB,EACPsB,aAAa,MACbC,WAAS,KAEX,mBAAQF,KAAK,SAASL,UAAWC,EAAAA,OAAjC,sBAKL,ECkDD,EAvFe,WACb,IAAMO,GAAWC,EAAAA,EAAAA,MACjB,GAAsC1B,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMyB,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAA8C9B,EAAAA,EAAAA,UAAS,IAAvD,eAAO+B,EAAP,KAAwBC,EAAxB,KACA,GAAkChC,EAAAA,EAAAA,WAAS,GAA3C,eAAOiC,EAAP,KAAkBC,EAAlB,KAEMC,EAAQL,EAAaM,IAAI,UAE1BnC,GAAekC,GAClBjC,EAAeiC,IAGjBE,EAAAA,EAAAA,YAAU,WACR,GAAKpC,EAAL,CAIA,IAAMqC,EAAkB,IAAIC,gBAwC5B,OAtCAL,GAAa,GAPC,mCA4CdM,GACO,WACLF,EAAgBG,OACjB,CA5CA,CAHa,wCASd,0FACkB,mCACC,+BAFnB,kBAKuBC,EAAAA,EAAAA,IAAA,UAHJ,+BAGI,iCAJL,mCAIK,kBACoCzC,EADpC,SACwD,GACzE,CAAE0C,OAAQL,EAAgBK,SAPhC,WAKUC,EALV,QAUcC,KAAKC,QAAQC,OAV3B,wBAWMb,GAAa,GACbT,EAAS,IACTO,EAAmB,IACnBzB,EAAAA,GAAAA,MAAY,gDAAiD,CAC3DC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SAtBf,2BA2BIgB,EAAmBY,EAAKC,KAAKC,SAC7BrB,EAAS,UAAD,OAAWxB,IACnBiC,GAAa,GA7BjB,kDA+BIc,QAAQC,IAAR,MA/BJ,2DATc,sBAgDf,GAAE,CAACxB,EAAUxB,IAMd,OACE,6BACE,SAACH,EAAD,CAAWC,SANU,SAAAE,GACvBC,EAAeD,EAChB,IAMIgC,IAAa,SAACiB,EAAA,EAAD,KAEd,wBACGnB,EAAgBoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,eAAP,OACnB,eAAIpC,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMoC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAM7B,GAA1C,SACG0B,KAF6BD,EADf,QAU5B,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.js","pages/Movies/Movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__4ow+Z\",\"listItem\":\"Movies_listItem__YWcFi\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Searchbar_form__D-hp5\",\"listItem\":\"Searchbar_listItem__2SCbN\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport css from './Searchbar.module.css';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [searchValue, setSearchValue] = useState('');\n\n  const handleChange = event => {\n    setSearchValue(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchValue.trim() === '') {\n      toast.warn('Please enter a film name', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'dark',\n      });\n\n      return;\n    }\n    onSubmit(searchValue.toLowerCase().trim());\n    setSearchValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        value={searchValue}\n        autoComplete=\"off\"\n        autoFocus\n      />\n      <button type=\"submit\" className={css.button}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { Link } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { useNavigate, useLocation, useSearchParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport css from './Movies.module.css';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\n\nconst Movies = () => {\n  const navigate = useNavigate();\n  const [searchValue, setSearchValue] = useState('');\n  const location = useLocation();\n  const [searchParams] = useSearchParams();\n  const [moviesByKayWord, setMoviesByKayWord] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const query = searchParams.get('query');\n\n  if (!searchValue && query) {\n    setSearchValue(query);\n  }\n\n  useEffect(() => {\n    if (!searchValue) {\n      return;\n    }\n\n    const abortController = new AbortController();\n\n    setIsLoading(true);\n\n    async function fetchData() {\n      const API_KEY = '6b1b36ecf2f3f3c0d27307e18cbffcb3';\n      const BASE_URL = 'https://api.themoviedb.org/3';\n\n      try {\n        const resp = await axios.get(\n          `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchValue}&page=${1}`,\n          { signal: abortController.signal }\n        );\n\n        if (!resp.data.results.length) {\n          setIsLoading(false);\n          navigate('');\n          setMoviesByKayWord([]);\n          toast.error('Sorry, no results were found for your search.', {\n            position: 'top-right',\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'dark',\n          });\n          return;\n        }\n\n        setMoviesByKayWord(resp.data.results);\n        navigate(`?query=${searchValue}`);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n    return () => {\n      abortController.abort();\n    };\n  }, [navigate, searchValue]);\n\n  const handleFormSubmit = searchValue => {\n    setSearchValue(searchValue);\n  };\n\n  return (\n    <main>\n      <Searchbar onSubmit={handleFormSubmit} />\n\n      {isLoading && <Loader />}\n\n      <ul>\n        {moviesByKayWord.map(({ id, original_title }) => (\n          <li className={css.listItem} key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              {original_title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["Searchbar","onSubmit","useState","searchValue","setSearchValue","event","preventDefault","trim","toLowerCase","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","className","css","onChange","currentTarget","value","type","autoComplete","autoFocus","navigate","useNavigate","location","useLocation","useSearchParams","searchParams","moviesByKayWord","setMoviesByKayWord","isLoading","setIsLoading","query","get","useEffect","abortController","AbortController","fetchData","abort","axios","signal","resp","data","results","length","console","log","Loader","map","id","original_title","to","state","from"],"sourceRoot":""}