{"version":3,"file":"static/js/914.86a9c1ab.chunk.js","mappings":"gRACA,EAA+B,mCAA/B,EAAsF,wCAAtF,EAAwI,8BAAxI,EAAuL,qC,kBCoIvL,EA5HqB,WAAO,IAAD,IACjBA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAY,oBAAGP,EAASQ,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,WACRJ,GAAa,GACb,IAAMK,EAAkB,IAAIC,gBAFd,wCAId,0FACkB,mCACC,+BAFnB,kBAKuBC,EAAAA,EAAAA,IAAA,UAHJ,+BAGI,kBACIf,EADJ,oBAJL,oCAMZ,CAAEgB,OAAQH,EAAgBG,SAPhC,WAKUC,EALV,QAUcC,KAVd,wBAWMC,EAAAA,GAAAA,MACE,2DACA,CACEC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SAGXpB,GAAa,GAxBnB,2BA2BIF,EAAgBW,EAAKC,MACrBV,GAAa,GA5BjB,kDA8BIqB,QAAQC,IAAR,MA9BJ,2DAJc,sBAuCd,OAvCc,mCAsCdC,GACO,WACLlB,EAAgBmB,OACjB,CACF,GAAE,CAAChC,IAEJ,IACEiC,EAOE5B,EAPF4B,YACAC,EAME7B,EANF6B,eACAC,EAKE9B,EALF8B,aACAC,EAIE/B,EAJF+B,MACAC,EAGEhC,EAHFgC,aACAC,EAEEjC,EAFFiC,SACAC,EACElC,EADFkC,OASIC,EAASP,EAAW,0CACaA,GACnCQ,EAEJ,OACE,6BACE,SAAC,KAAD,CAAMC,UAAWC,EAAaC,KAAK,SAASC,GAAIpC,EAAhD,4BAICF,IAAa,SAACuC,EAAA,EAAD,KAEd,iBAAKJ,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXI,IAAKP,EACLQ,IAAKZ,EACLa,MAAO,OAGT,4BACE,0BACGf,EADH,KACqB,IAAIgB,KAAKf,GAAcgB,eAAiB,UAD7D,QAGA,wCAAgBC,KAAKC,MAAqB,GAAfhB,OAC3B,sCACA,uBAAIC,KACJ,mCAEA,uBAnCU,SAAAC,GAChB,IACE,OAAOA,EAAOe,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC5B,CAAhB,MAAOC,GAAS,CACnB,CA+BWC,CAAUpB,YAIlB,oDACA,gBAAIG,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAME,GAAG,OAAOnC,MAAOR,EAASQ,MAAhC,UACE,wBACE,uCAIN,yBACE,SAAC,KAAD,CAAMmC,GAAG,UAAUnC,MAAOR,EAASQ,MAAnC,UACE,wBACE,6CAKR,SAAC,EAAAkD,SAAD,CAAUC,UAAU,SAACf,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"movieDetailsImage\":\"MovieDetails_movieDetailsImage__B+CGd\",\"btnBack\":\"MovieDetails_btnBack__X1hfE\",\"addInformation\":\"MovieDetails_addInformation__qgNCe\"};","import { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\nimport noPoster from '../../images/no-poster.jpg';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [currentMovie, setCurrentMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const abortController = new AbortController();\n\n    async function fetchData() {\n      const API_KEY = '6b1b36ecf2f3f3c0d27307e18cbffcb3';\n      const BASE_URL = 'https://api.themoviedb.org/3';\n\n      try {\n        const resp = await axios.get(\n          `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`,\n          { signal: abortController.signal }\n        );\n\n        if (!resp.data) {\n          toast.error(\n            'Sorry, a request error occurred. Please try again later.',\n            {\n              position: 'top-right',\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              theme: 'dark',\n            }\n          );\n          setIsLoading(false);\n          return;\n        }\n        setCurrentMovie(resp.data);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchData();\n    return () => {\n      abortController.abort();\n    };\n  }, [movieId]);\n\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    title,\n    vote_average,\n    overview,\n    genres,\n  } = currentMovie;\n\n  const genGenres = genres => {\n    try {\n      return genres.map(genre => genre.name).join(', ');\n    } catch (error) {}\n  };\n\n  const imgUrl = poster_path\n    ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n    : noPoster;\n\n  return (\n    <main>\n      <Link className={css.btnBack} type=\"button\" to={backLinkHref}>\n        &#x21e6; Go Back\n      </Link>\n\n      {isLoading && <Loader />}\n\n      <div className={css.movieDetails}>\n        <img\n          className={css.movieDetailsImage}\n          src={imgUrl}\n          alt={title}\n          width={250}\n        />\n\n        <div>\n          <h2>\n            {original_title} ({new Date(release_date).getFullYear() || \"no data\"})\n          </h2>\n          <p>User Score: {Math.floor(vote_average * 10)}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <b>Genres</b>\n\n          <p>{genGenres(genres)}</p>\n        </div>\n      </div>\n\n      <h2>Additional information</h2>\n      <ul className={css.addInformation}>\n        <li>\n          <Link to=\"cast\" state={location.state}>\n            <p>\n              <b>Cast</b>\n            </p>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={location.state}>\n            <p>\n              <b>Reviews</b>\n            </p>\n          </Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","location","useLocation","useState","currentMovie","setCurrentMovie","isLoading","setIsLoading","backLinkHref","state","from","useEffect","abortController","AbortController","axios","signal","resp","data","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","console","log","fetchData","abort","poster_path","original_title","release_date","title","vote_average","overview","genres","imgUrl","noPoster","className","css","type","to","Loader","src","alt","width","Date","getFullYear","Math","floor","map","genre","name","join","error","genGenres","Suspense","fallback"],"sourceRoot":""}